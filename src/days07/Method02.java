package days07;

//메서드를 사용하는 두번째 목적
//명령들의 단순 실행이 아닌 소정의 값을 연산하기 위한 명령들의 반복실행
//ex) 사각형의 넓이를 계산하는 메서드, 삼각형 넓이 계산 메서드, 
//성적표를 양식에 맞게 출력하는 메서드, 달력을 양식에 맞게 출력하는 메서드

//두번째 목적에 필요한 메서드를 그들이 실행되기 위해 필요한 값들이 있음
//두번째 목적으로 함수를 만들려면 필요한 값들을 함수에 전달하고 실행되게 해야 함
//호출한 곳에서 넣어주는 값을 전달인수라고 부르고
//메서드에서 전달된 값을 받아주는 변수를 매개변수라고 부름

public class Method02 {

	public static void myPrint3( int a, int b, int c) {
		// 매개변수가 여러개라고 해서 하나의 int로 여러 변수를 동시선언하면 안됨
		// 매개변수 int a, b, c;->X 안됨
		System.out.println("전달받은 매개변수의 값 a : "+ a + ", b : "+ b + ", c : "+c);
	}
	// 전달인수와 매개변수는 자료형과 개수, 그리고 순서도 모두 일치해야 함.
	
	public static void main(String[] args) {
		int n;
		n = 100;
		System.out.println("main 메서드의 지역변수 n 값 : "+n);
		myPrint1();
		myPrint2(300);
		myPrint2(n); // 전달인수로 변수를 넣으면 변수가 전달되는 것이 아니라 변수에 저장된 값이 복사본에 전달
		// 메서드는 정의된 형태로 호출해야 정상 호출됨
		// myPrint2(100, 200, 300); //에러 - 정의된 메서드의 호출에 맞지 않은 호출은 에러
		
		myPrint3(100, 200, 300);
		// 매개변수의 개수와 자료형이 다른 메서드가 필요하다면 추가로 정의해 사용함
		
	}
	
	public static void myPrint1() {
		int n;
		n = 200;
		System.out.println("myPrint1 메서드의 지역변수 n 값 : "+n);
	}
	
//	매개 변수의 선언
//	public static void 메서드이름( 자료형 매개변수이름, 자료형 매개변수이름...) {
//		
//	}
//	//괄호안에 변수를 선언하고 쓰는 형식, 매개변수 또한 필요한 개수만큼 선언해서 사용가능
	
//	매개변수 : 메서드 호출 시 메서드가 필요로 하는 데이터를 전달해줄 수 있는 매개역할의 변수
//	메서드 호출 시 괄호 안에 넣어주는 데이터 : 전달인수
//	메서드의 몸체에서 괄호 안에 위치하면 전달된 값을 받아주는 변수 : 매개변수
	public static void myPrint2(int n) {
		System.out.println("myPrint2메서드의 매개변수의 값 n : "+n);
	}
	
}
